---
- name: Install Docker prerequisites
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - smbclient
      - cifs-util
      - unzip
    state: present
    update_cache: yes

- name: Create /etc/apt/keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker APT repository
  ansible.builtin.shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list
  register: repo_add
  changed_when: repo_add.rc == 0

- name: Update APT cache after adding repository
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Ensure Docker service is started and enabled
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Deploy rita-docker from guest SMB share
  vars:
    smb_server: "10.250.232.181"
    smb_share: "shared"
    mount_point: "/mnt/smb_shared"
    zip_name: "rita-docker.zip"
    dest_dir: "/opt/"
    smb_opts: "guest,vers=3.0"
    compose_dirs:
      - backend-containers
      - tools-containers
      - frontend-containers
  tasks:
    - name: Create mount point
      ansible.builtin.file:
        src: "//{{ smb_server }}/{{ smb_share }}"
        path: "{{ mount_point }}"
        fstype: cifs
        opts: "{{ smb_opts }}"
        state: mounted

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ dest_dir }}"
        state: directory
        mode: "0755"

    - name: Copy the ZIP from SMB to destination
      ansible.builtin.copy:
        src: "{{ mount_point }}/{{ zip_name }}"
        dest: "{{ dest_dir }}/{{ zip_name }}"
        remote_src: true
        mode: "0644"

    - name: Unarchive RITA Docker bundle
      ansible.builtin.unarchive:
        src: "{{ dest_dir }}/{{ zip_name }}"
        dest: "{{ dest_dir }}"
        remote_src: true
        extra_opts: ["-o"] # overwrite newer files if re-run
  
    - name: Bring up each compose project
      ansible.builtin.shell: |
        set -euo pipefail
        docker compose up -d
      args:
        chdir: "{{ dest_dir }}/{{ item }}"
        loop: "{{ compose_dirs }}"


    - name: Show running containers
      ansible.builtin.shell: docker ps --format '{{"{{.Names}}"}} {{"{{.Status}}"}} {{"{{.Ports}}"}}'
        register: docker_ps
        changed_when: false


    - name: Print docker ps
      ansible.builtin.debug:
        msg: "{{ docker_ps.stdout_lines }}"



    - name: Unmount SMB share (optional)
      ansible.builtin.mount:
        path: "{{ mount_point }}"
        state: unmounted
      when: true
