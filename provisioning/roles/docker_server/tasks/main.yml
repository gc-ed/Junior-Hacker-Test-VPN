---
- name: Install docker dependancies
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present
    update_cache: yes

- name: Create /etc/apt/keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker APT repository
  ansible.builtin.shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list
  register: repo_add
  changed_when: repo_add.rc == 0

- name: Update APT cache after adding repository
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Ensure Docker service is started and enabled
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes




- name: Pull image
  community.docker.docker_image:
    name: activecm/rita
    tag: latest
    source: pull
    state: present
  register: image_pull

- name: Run RITA container
  community.docker.docker_container:
    name: rita-container
    image: activecm/rita:latest
    state: started
    detach: yes
    restart_policy: always
    published_ports: [8080:80, 40443:443] 
  register: container_output

- name: Show container output
  ansible.builtin.debug:
    msg: "{{ container_output.container.Output | default('No output captured') }}"
