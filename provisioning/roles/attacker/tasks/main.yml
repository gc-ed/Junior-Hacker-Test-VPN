- name: Adding aliases
  loop: "{{ aliases | dict2items }}"
  lineinfile:
    path: /etc/hosts
    line: "{{ item.value }} {{ item.key }}"

- name: Add zip's password to the fasttrack wordlist
  lineinfile:
    path: /usr/share/wordlists/fasttrack.txt
    line: IhateMyJob

- name: Create /home/user/hacking directory
  file:
    path: /home/user/hacking
    state: directory
    owner: user
    group: user
    mode: '0700'

- name: Copy and rename the wordlist to /root/hacking
  copy:
    src: /usr/share/wordlists/fasttrack.txt
    dest: /home/user/hacking/wordlist.txt
    owner: user
    mode: '0640'
    remote_src: yes

- name: Install required packages
  ansible.builtin.apt:
    name:
      - python3
      - python3-pip
      - python3-venv
      - git
      - nodejs
      - npm
      - python3-lxml
    state: present
  retries: 3
  delay: 5
  until: apt_install is success
  ignore_errors: true

- name: Clone Caldera repository
  git:
    repo: "{{ caldera_repo }}"
    dest: "{{ caldera_dir }}"
    version: master
    recursive: yes
    force: yes

- name: Remove lxml from requirements.txt to avoid build failures
  lineinfile:
    path: "{{ caldera_dir }}/requirements.txt"
    regexp: '^lxml.*'
    state: absent

- name: Create Python virtual environment
  command: python3 -m venv venv
  args:
    chdir: "{{ caldera_dir }}"
    creates: "{{ caldera_venv }}/bin/activate"

- name: Install Caldera requirements in virtualenv
  pip:
    requirements: requirements.txt
    virtualenv: "{{ caldera_venv }}"
  args:
    chdir: "{{ caldera_dir }}"

- name: Set VITE_CALDERA_URL for external access
  copy:
    dest: "{{ caldera_dir }}/plugins/magma/.env"
    content: |
      VITE_CALDERA_URL={{ vite_url }}

- name: Build Caldera magma UI
  shell: |
    npm install && npm run build
  args:
    chdir: "{{ caldera_dir }}/plugins/magma"

- name: Activate magma plugin as HTTP interface
  copy:
    dest: "{{ caldera_dir }}/conf/local.yml"
    content: |
      app.contact.http:
        - plugin: magma

- name: Create systemd service for Caldera
  copy:
    dest: /etc/systemd/system/caldera.service
    content: |
      [Unit]
      Description=MITRE Caldera Server
      After=network.target

      [Service]
      Type=simple
      User=root
      WorkingDirectory={{ caldera_dir }}
      ExecStart={{ caldera_venv }}/bin/python {{ caldera_dir }}/server.py --insecure
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Enable and start Caldera
  service:
    name: caldera
    enabled: yes
    state: restarted

- name: Allow Caldera port via UFW (if available)
  ufw:
    rule: allow
    port: "{{ caldera_port }}"
    proto: tcp
  when: ansible_facts['os_family'] == "Debian"

- name: Wait until Caldera responds
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: "{{ caldera_port }}"
    delay: 5
    timeout: 120

- name: Confirm HTTP response from Caldera
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ caldera_port }}"
    status_code: 200
  register: http_check
  retries: 10
  delay: 5
  until: http_check.status == 200
    
    
